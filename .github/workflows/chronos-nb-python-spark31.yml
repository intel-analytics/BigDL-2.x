name: Chronos NB Python Spark3.1 py38 py39

# Controls when the action will run. 
on:
  # schedule:
  #   - cron: '0 15 * * *' # GMT time, 15:00 GMT == 23:00 China
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/chronos-nb-python-spark31.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

env:
  GIST_ID: bc8a699b455bced4a1aef138ad5df07e

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  chronos-NB-pytorch-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch)
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all
          conda create -n chronos-nb-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env
          pip install pytest
          apt-get update
          apt-get install -y libgl1 patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[pytorch]
          source bigdl-nano-init
          bash python/chronos/dev/test/run-installation-options.sh "torch and not inference and not automl and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env -y --all

        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all

      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: chronos-NB-pytorch-test.json
          type: job
          job-name: chronos-NB-pytorch-test
          runner-hosted-on: 'Shanghai'

  chronos-NB-pytorch-inference-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference)
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all
          conda create -n chronos-nb-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env
          pip install pytest
          apt-get update
          apt-get install -y libgl1 patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[pytorch,inference]
          source bigdl-nano-init
          bash python/chronos/dev/test/run-installation-options.sh "torch and not automl and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      
      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all

      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: chronos-NB-pytorch-inference-test.json
          type: job
          job-name: chronos-NB-pytorch-inference-test
          runner-hosted-on: 'Shanghai'

  chronos-NB-pytorch-inference-automl-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference,automl)
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all
          conda create -n chronos-nb-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env
          pip install pytest
          apt-get update
          apt-get install -y libgl1 patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[pytorch,inference,automl]
          source bigdl-nano-init
          bash python/chronos/dev/test/run-installation-options.sh "torch and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      
      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all

      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: chronos-NB-pytorch-inference-automl-test.json
          type: job
          job-name: chronos-NB-pytorch-inference-automl-test
          runner-hosted-on: 'Shanghai'

  chronos-NB-pytorch-inference-automl-distributed-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference,automl,distributed)
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all
          conda create -n chronos-nb-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env
          pip install pytest
          apt-get update
          apt-get install -y libgl1 patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[pytorch,inference,automl,distributed]
          pip uninstall -y colorful
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          source bigdl-nano-init
          bash python/chronos/dev/test/run-installation-options.sh "torch and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      
      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all

      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: chronos-NB-pytorch-inference-automl-distributed-test.json
          type: job
          job-name: chronos-NB-pytorch-inference-automl-distributed-test
          runner-hosted-on: 'Shanghai'

  chronos-NB-tensorflow-inference-automl-distributed-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (tensorflow,inference,automl,distributed)
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all
          conda create -n chronos-nb-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env
          pip install pytest==5.4.1
          apt-get update
          apt-get install -y libgl1 patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[tensorflow,inference,automl,distributed]
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          source bigdl-nano-init
          bash python/chronos/dev/test/run-installation-options.sh "tf2 and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-nb-env -y --all

      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: chronos-NB-tensorflow-inference-automl-distributed-test.json
          type: job
          job-name: chronos-NB-tensorflow-inference-automl-distributed-test
          runner-hosted-on: 'Shanghai'

  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: ${{env.GIST_ID}}
        file-name: chronos-nb-python-spark31.json
        type: workflow
