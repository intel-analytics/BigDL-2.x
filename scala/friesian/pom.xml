<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>bigdl-parent-spark_${spark.version}</artifactId>
        <groupId>com.intel.analytics.bigdl</groupId>
        <version>2.5.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>bigdl-friesian-spark_${spark.version}</artifactId>
    <packaging>jar</packaging>

    <properties>
        <scoverage.plugin.version>1.1.1</scoverage.plugin.version>
        <scoverage.scalacPluginVersion>1.1.1</scoverage.scalacPluginVersion>
        <scoverage.aggregate>true</scoverage.aggregate>
        <runSpecsInParallel>false</runSpecsInParallel>
        <tagsToExclude>com.intel.analytics.bigdl.tags.Integration</tagsToExclude>
        <core.artifactId>zoo-core-dist-all</core.artifactId>
        <core.dependencyType>jar</core.dependencyType>
        <dllib.scope>provided</dllib.scope>
        <orca.scope>provided</orca.scope>
        <core.scope>provided</core.scope>
        <serving.scope>provided</serving.scope>
        <jersey.version>2.36</jersey.version>
        <bigdl.basedir>${project.parent.basedir}</bigdl.basedir>
    </properties>

    <repositories>
        <repository>
            <id>sonatype</id>
            <name>sonatype repository</name>
            <url>https://oss.sonatype.org/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.intel.analytics.bigdl</groupId>
            <artifactId>bigdl-dllib-spark_${spark.version}</artifactId>
            <version>2.5.0-SNAPSHOT</version>
            <scope>${dllib.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.intel.analytics.bigdl</groupId>
            <artifactId>bigdl-orca-spark_${spark.version}</artifactId>
            <version>2.5.0-SNAPSHOT</version>
            <scope>${orca.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.intel.analytics.bigdl.core.dist</groupId>
            <artifactId>all</artifactId>
            <version>2.4.0-SNAPSHOT</version>
            <scope>${bigdl-core-all-scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.intel.analytics.zoo</groupId>
            <artifactId>${core.artifactId}</artifactId>
            <version>2.4.0-SNAPSHOT</version>
            <type>${core.dependencyType}</type>
            <scope>${core.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark-scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.module</groupId>
                    <artifactId>jackson-module-scala_${scala.major.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-jaxb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-compress</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.ivy</groupId>
                    <artifactId>ivy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.26.0</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-mapper-asl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.gson</groupId>
                    <artifactId>gson</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty</artifactId>
	            </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jettison</groupId>
                    <artifactId>jettison</artifactId>
	            </exclusion>
                <exclusion>
                    <groupId>com.jcraft</groupId>
                    <artifactId>jsch</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.minidev</groupId>
                    <artifactId>json-smart</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>2.4.9</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark-scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-text</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.10.0</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>[3.25.5,)</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>3.15.8</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.intel.analytics.bigdl</groupId>
            <artifactId>bigdl-grpc-spark_${spark.version}</artifactId>
            <version>2.5.0-SNAPSHOT</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
            <version>6.2.4.RELEASE</version>
            <scope>${serving.scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>io.projectreactor</groupId>
                    <artifactId>reactor-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.latencyutils</groupId>
            <artifactId>LatencyUtils</artifactId>
            <version>2.0.3</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>me.dinowernli</groupId>
            <artifactId>java-grpc-prometheus</artifactId>
            <version>0.5.0</version>
            <scope>${serving.scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- The client -->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
            <version>0.12.0</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <!-- Hotspot JVM metrics-->
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_hotspot</artifactId>
            <version>0.12.0</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_httpserver</artifactId>
            <version>0.12.0</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.2.3</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scala.major.version}</artifactId>
            <version>${jackson.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
            <scope>${serving.scope}</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-api</artifactId>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-services</artifactId>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <scope>${serving.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupyter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${junit5-maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${junit5-maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${junit5-maven-failsafe-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>bigdl-test-report.txt</filereports>
                    <parallel>${runSpecsInParallel}</parallel>
                    <systemProperties>
                        <bigdl.disableCheckSysEnv>true</bigdl.disableCheckSysEnv>
                    </systemProperties>
                    <argLine>-Xmx6g -XX:MaxPermSize=1g</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <!--Please don't merge this shade plugin with spark-version's shade plugin to spark/pom.xml,
                 or shade plugin will be executed after assembly plugin. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <filters>
                        <filter>
                            <artifact>com.google.protobuf</artifact>
                            <excludes>
                                <exclude>META-INF/maven/com.google.protobuf/protobuf-java/*</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <relocations>
                        <relocation>
                            <pattern>com.google.protobuf</pattern>
                            <shadedPattern>com.intel.analytics.shaded.protobuf_v_3_25_2</shadedPattern>
                        </relocation>
                    </relocations>
                </configuration>
                <executions>
                    <execution>
                        <id>shade</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>com.google.protobuf</include>
                                </includes>
                            </artifactSet>
                        </configuration>
                    </execution>
                    <execution>
                        <id>without-spark</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <includes>
                                        <include>META-INF/MANIFEST.MF</include>
                                        <include>app.properties</include>
                                        <include>META-INF/maven/com.intel.analytics.bigdl/</include>
                                        <include>**/com/intel/analytics/bigdl/friesian/python/**</include>
                                        <include>**/com/intel/analytics/bigdl/friesian/feature/**</include>
                                    </includes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>serving</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedClassifierName>serving</shadedClassifierName>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>**/com/intel/analytics/bigdl/friesian/python/**</exclude>
                                        <exclude>**/com/intel/analytics/bigdl/friesian/feature/**</exclude>
                                        <exclude>**/com/intel/analytics/bigdl/friesian/FriesianSpec.scala</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <!--<execution>-->
                    <!--<id>with-spark</id>-->
                    <!--<configuration>-->
                    <!--<descriptors>-->
                    <!--<descriptor>${project.basedir}/src/assembly/all-in-one.xml</descriptor>-->
                    <!--</descriptors>-->
                    <!--</configuration>-->
                    <!--<phase>package</phase>-->
                    <!--<goals>-->
                    <!--<goal>single</goal>-->
                    <!--</goals>-->
                    <!--</execution>-->
                    <execution>
                        <id>python</id>
                        <inherited>false</inherited>
                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/../../python/friesian/src/python-zip.xml
                                </descriptor>
                            </descriptors>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin><!-- for scoverage-->
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <highlighting>true</highlighting>
                </configuration>

            </plugin>

            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>0.8.0</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${project.parent.basedir}/scalastyle_config.xml</configLocation>
                    <outputFile>${project.build.directory}/stylecheck/scalastyle-output.xml</outputFile>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>serving</id>
            <properties>
                <dllib.scope>compile</dllib.scope>
                <orca.scope>compile</orca.scope>
                <core.scope>compile</core.scope>
                <serving.scope>compile</serving.scope>
                <jackson.version>2.12.7</jackson.version>
            </properties>
        </profile>

        <profile>
            <id>per_platform</id>
            <properties>
                <bigdl-core-all-scope>provided</bigdl-core-all-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.intel.analytics.bigdl.core.dist</groupId>
                    <artifactId>${os-flag}</artifactId>
                    <version>2.4.0-SNAPSHOT</version>
                    <type>pom</type>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>parallel-tests</id>
            <properties>
                <runSpecsInParallel>true</runSpecsInParallel>
                <tagsToInclude>com.intel.analytics.bigdl.tags.Parallel</tagsToInclude>
                <tagsToExclude>com.intel.analytics.bigdl.tags.Integration</tagsToExclude>
            </properties>
        </profile>
        <profile>
            <id>serial-tests</id>
            <properties>
                <runSpecsInParallel>false</runSpecsInParallel>
                <tagsToExclude>com.intel.analytics.bigdl.tags.Parallel,com.intel.analytics.bigdl.tags.Integration</tagsToExclude>
            </properties>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <tagsToExclude>com.intel.analytics.bigdl.tags.Serial,com.intel.analytics.bigdl.tags.Parallel</tagsToExclude>
            </properties>
        </profile>

        <profile>
            <id>linux</id>
            <properties>
                <core.artifactId>zoo-core-dist-linux64</core.artifactId>
                <core.dependencyType>pom</core.dependencyType>
                <spark-mllib-scope>provided</spark-mllib-scope>
                <bigdl-core-all-scope>provided</bigdl-core-all-scope>
            </properties>
        </profile>

        <profile>
            <id>mac</id>
            <properties>
                <core.artifactId>zoo-core-dist-mac</core.artifactId>
                <core.dependencyType>pom</core.dependencyType>
                <spark-mllib-scope>provided</spark-mllib-scope>
                <bigdl-core-all-scope>provided</bigdl-core-all-scope>
            </properties>
        </profile>
    </profiles>
</project>
