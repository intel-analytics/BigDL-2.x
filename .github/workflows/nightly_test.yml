name: Nightly Test

on:

  #pull_request:
  #  branches: [ main ]

  # schedule:
  #   - cron: '30 15 * * *' # GMT time, 15:30 GMT == 23:30 China
  workflow_dispatch:
    inputs:
      artifact:
        description: 'select which job to run("all" will make all jobs run)'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - Orca-Basic-Py37-Spark3
        - Orca-Basic-PyTorch-Py37-Spark3
        - Orca-Basic-Tf2-Py37-Spark3
        - Orca-Basic-Py38-Spark3
        - Orca-Basic-PyTorch-Py38-Spark3
        - Orca-Basic-Tf2-Py38-Spark3
        - Orca-Basic-Py39-Spark3
        - Orca-Basic-PyTorch-Py39-Spark3
        - Orca-Basic-Tf2-Py39-Spark3
        - Orca-Pytest-Ray-Py37-Spark3
        - Orca-Pytest-Ray-Py38-Spark3
        - Orca-Pytest-Ray-Py39-Spark3
        - Orca-Pytest-Py37-Spark3-Tf1
        - Orca-Pytest-Py38-Spark3
        - Orca-Pytest-Py39-Spark3
        - Orca-ExampleTest-Ray-Ctx-Py37-Spark3
        - Orca-Pytest-Horovod-Py37-Spark3
        - Orca-Pytest-Jep-Py37-Spark3
        - Orca-Pytest-AutoML-Py37-Spark3
        - Orca-ExampleTest-Jep-Py37-Spark3
        - Orca-ExampleTest-Tf1-Py37-Spark3
        - Orca-ExampleTest-Ray-Py37-Spark3
        - Orca-ExampleTest-Ray-Py38-Spark3
        - Orca-ExampleTest-Ray-Py39-Spark3
        - Orca-ExampleTest-Horovod-Py37-Spark3
        - Orca-ExampleTest-Horovod-Py38-Spark3
        - Orca-Tutorial-Xshards-Py37-Spark3
        - Orca-Tutorial-Notebook-Xshards-Py37-Spark3
        - Orca-Tutorial-Notebook-Xshards-Image-Py37-Spark3
        - Orca-Tutorial-Notebook-Xshards-Py38-Spark3
        - Orca-Tutorial-Notebook-Xshards-Image-Py38-Spark3
        - Orca-Tutorial-Notebook-Xshards-Py39-Spark3
        - Orca-Tutorial-Notebook-Xshards-Image-Py39-Spark3
        - Orca-Tutorial-NCF-Ray-Py37-Spark3
        - Orca-Tutorial-NCF-Py37-Spark3
        - Orca-Tutorial-NCF-Ray-Py38-Spark3
        - Orca-Tutorial-NCF-Py38-Spark3
        - Orca-Tutorial-NCF-Ray-Py39-Spark3
        - Orca-Tutorial-NCF-Py39-Spark3
        - Orca-Pytest-Ray-Ctx-Py37-Spark3
        - Orca-Docker-Py39-Spark3
        - Dllib-Scala-UT
        - Friesian-Scala-UT
        - Friesian-Python-Py37-Spark3
        - Friesian-Python-Py37-Spark3-Pip
        - Friesian-Python-ExampleTest-Feature-Tf1-Py37-Spark3
        - Friesian-Python-ExampleTest-Feature-Tf1-Pip-Py37-Spark3
        - Friesian-Python-ExampleTest-Tf2-Py37-Spark3
        - Friesian-Python-ExampleTest-Tf2-Pip-Py37-Spark3
        - PPML-Scala-UT
        - PPML-Python-UT-Spark3
        - PPML-Occlum-ExampleTests
        - PPML-Occlum-EDMM-ExampleTests
        - PPML-spark-Local-SimpleQuery-Tests-on-Gramine
        - PPML-RealTime-ML-Occlum
        - PPML-RealTime-ML-Occlum-K8s
        - Colab-Python-Py37-Pytorch
        - Colab-Python-Py37-tf1
        - Colab-Python-Py37-tf2
        - Python-AppTests-part1
        - Python-AppTests-part2
        - Scala-AppTests

      image:
        description: 'docker image name'
        required: true
        default: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-bigdata-gramine-reference'
        type: string
      tag:
        description: 'docker image tag'
        required: true
        default: 'latest'
        type: string


env:
  GIST_ID: bc8a699b455bced4a1aef138ad5df07e

permissions:
  contents: read

jobs:
  Orca-Basic-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Py37-Spark3.json
        type: job
        job-name: Orca-Basic-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-PyTorch-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-PyTorch-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-pytorch-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-PyTorch-Py37-Spark3.json
        type: job
        job-name: Orca-Basic-PyTorch-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-Tf2-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Tf2-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-tf2-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Tf2-Py37-Spark3.json
        type: job
        job-name: Orca-Basic-Tf2-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Py38-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Py38-Spark3.json
        type: job
        job-name: Orca-Basic-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-PyTorch-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-PyTorch-Py38-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-pytorch-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-PyTorch-Py38-Spark3.json
        type: job
        job-name: Orca-Basic-PyTorch-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-Tf2-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Tf2-Py38-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-tf2-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Tf2-Py38-Spark3.json
        type: job
        job-name: Orca-Basic-Tf2-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Py39-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Py39-Spark3.json
        type: job
        job-name: Orca-Basic-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-PyTorch-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-PyTorch-Py39-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-pytorch-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-PyTorch-Py39-Spark3.json
        type: job
        job-name: Orca-Basic-PyTorch-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Basic-Tf2-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Basic-Tf2-Py39-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-basic-tf2-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Basic-Tf2-Py39-Spark3.json
        type: job
        job-name: Orca-Basic-Tf2-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Tf1-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Tf1-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-tf1-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Tf1-Py37-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Tf1-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-ray-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Ray-Py37-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Ray-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Ray-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Ray-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-ray-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Ray-Py38-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Ray-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Ray-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Ray-Py39-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-ray-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Ray-Py39-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Ray-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Jep-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Jep-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-jep-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Jep-Py37-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Jep-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Horovod-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Horovod-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-horovod-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Horovod-Py37-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Horovod-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Horovod-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Horovod-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-exampletest-horovod-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Horovod-Py38-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Horovod-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-ray-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Ray-Py37-Spark3.json
        type: job
        job-name: Orca-Pytest-Ray-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Ray-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Ray-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-ray-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Ray-Py38-Spark3.json
        type: job
        job-name: Orca-Pytest-Ray-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Ray-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Ray-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-ray-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Ray-Py39-Spark3.json
        type: job
        job-name: Orca-Pytest-Ray-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Py37-Spark3-Tf1:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Py37-Spark3-Tf1' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-py37-spark3-tf1-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Py37-Spark3-Tf1.json
        type: job
        job-name: Orca-Pytest-Py37-Spark3-Tf1
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Py38-Spark3.json
        type: job
        job-name: Orca-Pytest-Py38-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Py39-Spark3.json
        type: job
        job-name: Orca-Pytest-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Horovod-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Horovod-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-horovod-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Horovod-Py37-Spark3.json
        type: job
        job-name: Orca-Pytest-Horovod-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-AutoML-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-AutoML-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-automl-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-AutoML-Py37-Spark3.json
        type: job
        job-name: Orca-Pytest-AutoML-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Pytest-Jep-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Jep-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-jep-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Jep-Py37-Spark3.json
        type: job
        job-name: Orca-Pytest-Jep-Py37-Spark3
        runner-hosted-on: 'Shanghai'
      
  Orca-Tutorial-Xshards-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Xshards-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-xshards-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Xshards-Py37-Spark3.json
        type: job
        job-name: Orca-Tutorial-Xshards-Py37-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-Notebook-Xshards-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Py37-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Py37-Spark3
        runner-hosted-on: 'Shanghai' 
  
  Orca-Tutorial-Notebook-Xshards-Image-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Image-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-image-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Image-Py37-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Image-Py37-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-Notebook-Xshards-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Py38-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Py38-Spark3
        runner-hosted-on: 'Shanghai' 
  
  Orca-Tutorial-Notebook-Xshards-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Py39-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Py39-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-Notebook-Xshards-Image-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Image-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-image-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Image-Py38-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Image-Py38-Spark3
        runner-hosted-on: 'Shanghai' 
  
  Orca-Tutorial-Notebook-Xshards-Image-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-Notebook-Xshards-Image-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-notebook-xshards-image-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-Notebook-Xshards-Image-Py39-Spark3.json
        type: job
        job-name: Orca-Tutorial-Notebook-Xshards-Image-Py39-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-NCF-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-ray-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Ray-Py37-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Ray-Py37-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-NCF-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Py37-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Py37-Spark3
        runner-hosted-on: 'Shanghai' 


  Orca-Tutorial-NCF-Ray-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Ray-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-ray-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Ray-Py38-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Ray-Py38-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-NCF-Py38-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Py38-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-py38-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py38
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Py38-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Py38-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-NCF-Ray-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Ray-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-ray-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Ray-Py39-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Ray-Py39-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Tutorial-NCF-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Tutorial-NCF-Py39-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py39-basic
    - name: Run Test
      uses: ./.github/actions/orca/orca-tutorial-ncf-py39-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env/remove-env-py39
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Tutorial-NCF-Py39-Spark3.json
        type: job
        job-name: Orca-Tutorial-NCF-Py39-Spark3
        runner-hosted-on: 'Shanghai' 

  Orca-Pytest-Ray-Ctx-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Pytest-Ray-Ctx-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin-Ctx]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-ray-ctx-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-pytest-ray-ctx-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Pytest-Ray-Ctx-Py37-Spark3.json
        type: job
        job-name: Orca-Pytest-Ray-Ctx-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-ExampleTest-Ray-Ctx-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-ExampleTest-Ray-Ctx-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin-resources, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-basic
    - name: Run test
      uses: ./.github/actions/orca/orca-exampletest-ray-ctx-py37-spark3-action
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-ExampleTest-Ray-Ctx-Py37-Spark3.json
        type: job
        job-name: Orca-ExampleTest-Ray-Ctx-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Docker-Py39-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Docker-Py39-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Vilvarin]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-orca'
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/orca/orca-docker-py39-spark3-action
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Docker-Py39-Spark3.json
        type: job
        job-name: Orca-Docker-Py39-Spark3
        runner-hosted-on: 'Shanghai'

  Dllib-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Dllib-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/dllib-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Dllib-Scala-UT.json
        type: job
        job-name: Dllib-Scala-UT
        runner-hosted-on: 'Shanghai'
      
  Friesian-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, ubuntu-20.04-lts, CLX, AVX512, Ettenmoors ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/friesian-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Scala-UT.json
        type: job
        job-name: Friesian-Scala-UT
        runner-hosted-on: 'Shanghai'
      
  PPML-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/ppml-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Scala-UT.json
        type: job
        job-name: PPML-Scala-UT
        runner-hosted-on: 'Shanghai'

  PPML-Python-UT-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Python-UT-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/ppml/setup-env/setup-ppml-python-ut-spark3
    - name: Run Test
      uses: ./.github/actions/ppml/ppml-python-ut-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Python-UT-Spark3.json
        type: job
        job-name: PPML-Python-UT-Spark3
        runner-hosted-on: 'Shanghai'

  PPML-Occlum-ExampleTests:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Occlum-ExampleTests' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, SGX, Wilwarin]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-big-data-ml-scala-occlum'
        DEFAULT_TAG: '2.5.0-SNAPSHOT'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run Test
      uses: ./.github/actions/ppml-occlum-exampletests-action
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Occlum-ExampleTests.json
        type: job
        job-name: PPML-Occlum-ExampleTests
        runner-hosted-on: 'Shanghai'

  PPML-Occlum-EDMM-ExampleTests:
    if: ${{ github.event.inputs.artifact == 'PPML-Occlum-EDMM-ExampleTests' }}
    runs-on: [self-hosted, EDMM]

    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
      - name: Set up JDK8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up maven
        uses: ./.github/actions/maven-setup-action
      - name: set env
        env:
          DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-big-data-ml-scala-occlum'
          DEFAULT_TAG: '2.5.0-SNAPSHOT-EDMM'
        run: |
          echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
          echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
      - name: Run Test
        uses: ./.github/actions/ppml/ppml-occlum-EDMM-exampletests-action
        with:
          image: ${{env.IMAGE}}
          image-tag: ${{env.TAG}}
      - name: Create Job Badge
        uses: ./.github/actions/create-job-status-badge
        if: ${{ always() }}
        with:
          secret: ${{ secrets.GIST_SECRET}}
          gist-id: ${{env.GIST_ID}}
          is-self-hosted-runner: true
          file-name: PPML-Occlum-EDMM-ExampleTests.json
          type: job
          job-name: PPML-Occlum-EDMM-ExampleTests
          runner-hosted-on: 'Shanghai'

  PPML-RealTime-ML-Occlum:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-RealTime-ML-Occlum' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Vilvarin]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-realtime-ml-scala-occlum'
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/ppml/ppml-realtime-ml-occlum
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-RealTime-ML-Occlum.json
        type: job
        job-name: PPML-RealTime-ML-Occlum
        runner-hosted-on: 'Shanghai'

  PPML-RealTime-ML-Occlum-K8s:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-RealTime-ML-Occlum-K8s' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Vilvarin-root]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-realtime-ml-scala-occlum'
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/ppml/ppml-realtime-ml-occlum-k8s
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-RealTime-ML-Occlum-K8s.json
        type: job
        job-name: PPML-RealTime-ML-Occlum-K8s
        runner-hosted-on: 'Shanghai'
        

  Friesian-Python-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-py37-spark3
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Friesian-Python-Py37-Spark3-Pip:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-Py37-Spark3-Pip' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-py37-spark3-pip
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-Py37-Spark3-Pip.json
        type: job
        job-name: Friesian-Python-Py37-Spark3-Pip
        runner-hosted-on: 'Shanghai'

  Friesian-Python-ExampleTest-Feature-Tf1-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-ExampleTest-Feature-Tf1-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-exampletest-feature-tf1-py37-spark3
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-ExampleTest-Feature-Tf1-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-ExampleTest-Feature-Tf1-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Friesian-Python-ExampleTest-Feature-Tf1-Pip-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-ExampleTest-Feature-Tf1-Pip-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-exampletest-feature-tf1-pip-py37-spark3
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-ExampleTest-Feature-Tf1-Pip-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-ExampleTest-Feature-Tf1-Pip-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Friesian-Python-ExampleTest-Tf2-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-ExampleTest-Tf2-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-tf2-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-exampletest-tf2-py37-spark3
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-ExampleTest-Tf2-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-ExampleTest-Tf2-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Friesian-Python-ExampleTest-Tf2-Pip-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-ExampleTest-Tf2-Pip-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-tf2-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-exampletest-tf2-pip-py37-spark3
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-ExampleTest-Tf2-Pip-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-ExampleTest-Tf2-Pip-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  PPML-spark-Local-SimpleQuery-Tests-on-Gramine:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-spark-Local-SimpleQuery-Tests-on-Gramine' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, SGX, Wilwarin]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-bigdata-gramine-reference'
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/ppml/ppml-spark-local-simplequery-tests-on-gramine-action
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-spark-Local-SimpleQuery-Tests-on-Gramine.json
        type: job
        job-name: PPML-spark-Local-SimpleQuery-Tests-on-Gramine
        runner-hosted-on: 'Shanghai'

  Colab-Python-Py37-Pytorch:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Colab-Python-Py37-Pytorch' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/colab/colab-python-py37-pytorch
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Colab-Python-Py37-Pytorch.json
        type: job
        job-name: Colab-Python-Py37-Pytorch
        runner-hosted-on: 'Shanghai'

  Colab-Python-Py37-tf1:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Colab-Python-Py37-tf1' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/colab/colab-python-py37-tf1
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Colab-Python-Py37-tf1.json
        type: job
        job-name: Colab-Python-Py37-tf1
        runner-hosted-on: 'Shanghai'

  Colab-Python-Py37-tf2:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Colab-Python-Py37-tf2' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/colab/colab-python-py37-tf2
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Colab-Python-Py37-tf2.json
        type: job
        job-name: Colab-Python-Py37-tf2
        runner-hosted-on: 'Shanghai'

  Python-AppTests-part1:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Python-AppTests-part1' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/appTests/python-appTests-part1
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Python-AppTests-part1.json
        type: job
        job-name: Python-AppTests-part1
        runner-hosted-on: 'Shanghai'

  Python-AppTests-part2:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Python-AppTests-part2' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/appTests/python-appTests-part2
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Python-AppTests-part2.json
        type: job
        job-name: Python-AppTests-part2
        runner-hosted-on: 'Shanghai'

  Scala-AppTests:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Scala-AppTests' || github.event.inputs.artifact == 'all' }}
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.6.3
    - name: Run Test
      uses: ./.github/actions/appTests/scala-appTests
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Scala-AppTests.json
        type: job
        job-name: Scala-AppTests
        runner-hosted-on: 'Shanghai'
    
    
  # please put your test before the create-workflow-badge to make sure the badge can be displayed on the github page.
  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: ${{env.GIST_ID}}
        file-name: nightly-test.json
        type: workflow
  