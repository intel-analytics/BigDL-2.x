#!/usr/bin/env bash

#
# Copyright 2018 Analytics Zoo Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

. `dirname $0`/prepare_env.sh

cd "`dirname $0`"

export PYSPARK_PYTHON=python
export PYSPARK_DRIVER_PYTHON=python

ray stop -f

echo "Running orca learn ray tests"
python -m pytest -v ../test/zoo/orca/learn/ray \
       --ignore=../test/zoo/orca/learn/ray/pytorch/test_estimator_horovod_backend.py \
       --ignore=../test/zoo/orca/learn/ray/tf/ 
exit_status_2=$?
if [ $exit_status_2 -ne 0 ];
then
    exit $exit_status_2
fi

ray stop -f

echo "Running orca auto estimator tests"
python -m pytest -v ../test/zoo/orca/automl/autoestimator
exit_status_6=$?
if [ $exit_status_6 -ne 0 ];
then
    exit $exit_status_6
fi

ray stop -f

echo "Running automl tests"
python -m pytest -v ../test/zoo/automl
exit_status_3=$?
if [ $exit_status_3 -ne 0 ];
then
    exit $exit_status_3
fi

ray stop -f

echo "Running chronos tests"
python -m pytest -v ../test/zoo/chronos \
       -k "not test_forecast_tcmf_distributed"
exit_status_4=$?
if [ $exit_status_4 -ne 0 ];
then
    exit $exit_status_4
fi

ray stop -f

echo "Running orca data tests"
python -m pytest -v ../test/zoo/orca/data \
       --ignore=../test/zoo/orca/data/test_read_parquet_images.py
exit_status_5=$?
if [ $exit_status_5 -ne 0 ];
then
    exit $exit_status_5
fi

ray stop -f

echo "Running RayOnSpark tests"
python -m pytest -v ../test/zoo/ray/ \
	--ignore=../test/zoo/ray/integration/ \
	--ignore=../test/zoo/ray/test_reinit_raycontext.py
exit_status_1=$?
if [ $exit_status_1 -ne 0 ];
then
    exit $exit_status_1
fi

ray stop -f
