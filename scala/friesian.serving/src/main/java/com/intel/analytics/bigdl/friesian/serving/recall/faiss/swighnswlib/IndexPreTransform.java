/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.intel.analytics.bigdl.friesian.serving.recall.faiss.swighnswlib;

public class IndexPreTransform extends Index {
  private transient long swigCPtr;

  protected IndexPreTransform(long cPtr, boolean cMemoryOwn) {
    super(swigfaissJNI.IndexPreTransform_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IndexPreTransform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        swigfaissJNI.delete_IndexPreTransform(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setChain(VectorTransformVector value) {
    swigfaissJNI.IndexPreTransform_chain_set(swigCPtr, this, VectorTransformVector.getCPtr(value), value);
  }

  public VectorTransformVector getChain() {
    long cPtr = swigfaissJNI.IndexPreTransform_chain_get(swigCPtr, this);
    return (cPtr == 0) ? null : new VectorTransformVector(cPtr, false);
  }

  public void setIndex(Index value) {
    swigfaissJNI.IndexPreTransform_index_set(swigCPtr, this, getCPtr(value), value);
  }

  public Index getIndex() {
    long cPtr = swigfaissJNI.IndexPreTransform_index_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Index(cPtr, false);
  }

  public void setOwn_fields(boolean value) {
    swigfaissJNI.IndexPreTransform_own_fields_set(swigCPtr, this, value);
  }

  public boolean getOwn_fields() {
    return swigfaissJNI.IndexPreTransform_own_fields_get(swigCPtr, this);
  }

  public IndexPreTransform(Index index) {
    this(swigfaissJNI.new_IndexPreTransform__SWIG_0(getCPtr(index), index), true);
  }

  public IndexPreTransform() {
    this(swigfaissJNI.new_IndexPreTransform__SWIG_1(), true);
  }

  public IndexPreTransform(VectorTransform ltrans, Index index) {
    this(swigfaissJNI.new_IndexPreTransform__SWIG_2(VectorTransform.getCPtr(ltrans), ltrans, getCPtr(index), index), true);
  }

  public void prepend_transform(VectorTransform ltrans) {
    swigfaissJNI.IndexPreTransform_prepend_transform(swigCPtr, this, VectorTransform.getCPtr(ltrans), ltrans);
  }

  public void train(int n, SWIGTYPE_p_float x) {
    swigfaissJNI.IndexPreTransform_train(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x));
  }

  public void add(int n, SWIGTYPE_p_float x) {
    swigfaissJNI.IndexPreTransform_add(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x));
  }

  public void add_with_ids(int n, SWIGTYPE_p_float x, SWIGTYPE_p_long xids) {
    swigfaissJNI.IndexPreTransform_add_with_ids(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_long.getCPtr(xids));
  }

  public void reset() {
    swigfaissJNI.IndexPreTransform_reset(swigCPtr, this);
  }

  public long remove_ids(IDSelector sel) {
    return swigfaissJNI.IndexPreTransform_remove_ids(swigCPtr, this, IDSelector.getCPtr(sel), sel);
  }

  public void search(int n, SWIGTYPE_p_float x, int k, SWIGTYPE_p_float distances, SWIGTYPE_p_long labels) {
    swigfaissJNI.IndexPreTransform_search(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), k, SWIGTYPE_p_float.getCPtr(distances), SWIGTYPE_p_long.getCPtr(labels));
  }

  public void range_search(int n, SWIGTYPE_p_float x, float radius, RangeSearchResult result) {
    swigfaissJNI.IndexPreTransform_range_search(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), radius, RangeSearchResult.getCPtr(result), result);
  }

  public void reconstruct(int key, SWIGTYPE_p_float recons) {
    swigfaissJNI.IndexPreTransform_reconstruct(swigCPtr, this, key, SWIGTYPE_p_float.getCPtr(recons));
  }

  public void reconstruct_n(int i0, int ni, SWIGTYPE_p_float recons) {
    swigfaissJNI.IndexPreTransform_reconstruct_n(swigCPtr, this, i0, ni, SWIGTYPE_p_float.getCPtr(recons));
  }

  public void search_and_reconstruct(int n, SWIGTYPE_p_float x, int k, SWIGTYPE_p_float distances, SWIGTYPE_p_long labels, SWIGTYPE_p_float recons) {
    swigfaissJNI.IndexPreTransform_search_and_reconstruct(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), k, SWIGTYPE_p_float.getCPtr(distances), SWIGTYPE_p_long.getCPtr(labels), SWIGTYPE_p_float.getCPtr(recons));
  }

  public SWIGTYPE_p_float apply_chain(int n, SWIGTYPE_p_float x) {
    long cPtr = swigfaissJNI.IndexPreTransform_apply_chain(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public void reverse_chain(int n, SWIGTYPE_p_float xt, SWIGTYPE_p_float x) {
    swigfaissJNI.IndexPreTransform_reverse_chain(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(xt), SWIGTYPE_p_float.getCPtr(x));
  }

  public long sa_code_size() {
    return swigfaissJNI.IndexPreTransform_sa_code_size(swigCPtr, this);
  }

  public void sa_encode(int n, SWIGTYPE_p_float x, SWIGTYPE_p_unsigned_char bytes) {
    swigfaissJNI.IndexPreTransform_sa_encode(swigCPtr, this, n, SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_unsigned_char.getCPtr(bytes));
  }

  public void sa_decode(int n, SWIGTYPE_p_unsigned_char bytes, SWIGTYPE_p_float x) {
    swigfaissJNI.IndexPreTransform_sa_decode(swigCPtr, this, n, SWIGTYPE_p_unsigned_char.getCPtr(bytes), SWIGTYPE_p_float.getCPtr(x));
  }

}
