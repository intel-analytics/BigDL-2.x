// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensor_slice.proto

package org.tensorflow.framework;

/**
 * <pre>
 * Can only be interpreted if you know the corresponding TensorShape.
 * </pre>
 *
 * Protobuf type {@code tensorflow.TensorSliceProto}
 */
public  final class TensorSliceProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.TensorSliceProto)
    TensorSliceProtoOrBuilder {
  // Use TensorSliceProto.newBuilder() to construct.
  private TensorSliceProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TensorSliceProto() {
    extent_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TensorSliceProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              extent_ = new java.util.ArrayList<org.tensorflow.framework.TensorSliceProto.Extent>();
              mutable_bitField0_ |= 0x00000001;
            }
            extent_.add(
                input.readMessage(org.tensorflow.framework.TensorSliceProto.Extent.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        extent_ = java.util.Collections.unmodifiableList(extent_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.framework.TensorSliceProto.class, org.tensorflow.framework.TensorSliceProto.Builder.class);
  }

  public interface ExtentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.TensorSliceProto.Extent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Start index of the slice, starting at 0.
     * </pre>
     *
     * <code>optional int64 start = 1;</code>
     */
    long getStart();

    /**
     * <code>optional int64 length = 2;</code>
     */
    long getLength();

    public org.tensorflow.framework.TensorSliceProto.Extent.HasLengthCase getHasLengthCase();
  }
  /**
   * <pre>
   * Extent of the slice in one dimension.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TensorSliceProto.Extent}
   */
  public  static final class Extent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.TensorSliceProto.Extent)
      ExtentOrBuilder {
    // Use Extent.newBuilder() to construct.
    private Extent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Extent() {
      start_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Extent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              start_ = input.readInt64();
              break;
            }
            case 16: {
              hasLengthCase_ = 2;
              hasLength_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.TensorSliceProto.Extent.class, org.tensorflow.framework.TensorSliceProto.Extent.Builder.class);
    }

    private int hasLengthCase_ = 0;
    private java.lang.Object hasLength_;
    public enum HasLengthCase
        implements com.google.protobuf.Internal.EnumLite {
      LENGTH(2),
      HASLENGTH_NOT_SET(0);
      private final int value;
      private HasLengthCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HasLengthCase valueOf(int value) {
        return forNumber(value);
      }

      public static HasLengthCase forNumber(int value) {
        switch (value) {
          case 2: return LENGTH;
          case 0: return HASLENGTH_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public HasLengthCase
    getHasLengthCase() {
      return HasLengthCase.forNumber(
          hasLengthCase_);
    }

    public static final int START_FIELD_NUMBER = 1;
    private long start_;
    /**
     * <pre>
     * Start index of the slice, starting at 0.
     * </pre>
     *
     * <code>optional int64 start = 1;</code>
     */
    public long getStart() {
      return start_;
    }

    public static final int LENGTH_FIELD_NUMBER = 2;
    /**
     * <code>optional int64 length = 2;</code>
     */
    public long getLength() {
      if (hasLengthCase_ == 2) {
        return (java.lang.Long) hasLength_;
      }
      return 0L;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != 0L) {
        output.writeInt64(1, start_);
      }
      if (hasLengthCase_ == 2) {
        output.writeInt64(
            2, (long)((java.lang.Long) hasLength_));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, start_);
      }
      if (hasLengthCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              2, (long)((java.lang.Long) hasLength_));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.TensorSliceProto.Extent)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.TensorSliceProto.Extent other = (org.tensorflow.framework.TensorSliceProto.Extent) obj;

      boolean result = true;
      result = result && (getStart()
          == other.getStart());
      result = result && getHasLengthCase().equals(
          other.getHasLengthCase());
      if (!result) return false;
      switch (hasLengthCase_) {
        case 2:
          result = result && (getLength()
              == other.getLength());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + START_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStart());
      switch (hasLengthCase_) {
        case 2:
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLength());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.TensorSliceProto.Extent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.TensorSliceProto.Extent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Extent of the slice in one dimension.
     * </pre>
     *
     * Protobuf type {@code tensorflow.TensorSliceProto.Extent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.TensorSliceProto.Extent)
        org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_Extent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.TensorSliceProto.Extent.class, org.tensorflow.framework.TensorSliceProto.Extent.Builder.class);
      }

      // Construct using org.tensorflow.framework.TensorSliceProto.Extent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        start_ = 0L;

        hasLengthCase_ = 0;
        hasLength_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_Extent_descriptor;
      }

      public org.tensorflow.framework.TensorSliceProto.Extent getDefaultInstanceForType() {
        return org.tensorflow.framework.TensorSliceProto.Extent.getDefaultInstance();
      }

      public org.tensorflow.framework.TensorSliceProto.Extent build() {
        org.tensorflow.framework.TensorSliceProto.Extent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.TensorSliceProto.Extent buildPartial() {
        org.tensorflow.framework.TensorSliceProto.Extent result = new org.tensorflow.framework.TensorSliceProto.Extent(this);
        result.start_ = start_;
        if (hasLengthCase_ == 2) {
          result.hasLength_ = hasLength_;
        }
        result.hasLengthCase_ = hasLengthCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.TensorSliceProto.Extent) {
          return mergeFrom((org.tensorflow.framework.TensorSliceProto.Extent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.TensorSliceProto.Extent other) {
        if (other == org.tensorflow.framework.TensorSliceProto.Extent.getDefaultInstance()) return this;
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        switch (other.getHasLengthCase()) {
          case LENGTH: {
            setLength(other.getLength());
            break;
          }
          case HASLENGTH_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.TensorSliceProto.Extent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.TensorSliceProto.Extent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int hasLengthCase_ = 0;
      private java.lang.Object hasLength_;
      public HasLengthCase
          getHasLengthCase() {
        return HasLengthCase.forNumber(
            hasLengthCase_);
      }

      public Builder clearHasLength() {
        hasLengthCase_ = 0;
        hasLength_ = null;
        onChanged();
        return this;
      }


      private long start_ ;
      /**
       * <pre>
       * Start index of the slice, starting at 0.
       * </pre>
       *
       * <code>optional int64 start = 1;</code>
       */
      public long getStart() {
        return start_;
      }
      /**
       * <pre>
       * Start index of the slice, starting at 0.
       * </pre>
       *
       * <code>optional int64 start = 1;</code>
       */
      public Builder setStart(long value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Start index of the slice, starting at 0.
       * </pre>
       *
       * <code>optional int64 start = 1;</code>
       */
      public Builder clearStart() {
        
        start_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>optional int64 length = 2;</code>
       */
      public long getLength() {
        if (hasLengthCase_ == 2) {
          return (java.lang.Long) hasLength_;
        }
        return 0L;
      }
      /**
       * <code>optional int64 length = 2;</code>
       */
      public Builder setLength(long value) {
        hasLengthCase_ = 2;
        hasLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 length = 2;</code>
       */
      public Builder clearLength() {
        if (hasLengthCase_ == 2) {
          hasLengthCase_ = 0;
          hasLength_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.TensorSliceProto.Extent)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.TensorSliceProto.Extent)
    private static final org.tensorflow.framework.TensorSliceProto.Extent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.TensorSliceProto.Extent();
    }

    public static org.tensorflow.framework.TensorSliceProto.Extent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Extent>
        PARSER = new com.google.protobuf.AbstractParser<Extent>() {
      public Extent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Extent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Extent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Extent> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.TensorSliceProto.Extent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int EXTENT_FIELD_NUMBER = 1;
  private java.util.List<org.tensorflow.framework.TensorSliceProto.Extent> extent_;
  /**
   * <pre>
   * Extent of the slice in all tensor dimensions.
   * Must have one entry for each of the dimension of the tensor that this
   * slice belongs to.  The order of sizes is the same as the order of
   * dimensions in the TensorShape.
   * </pre>
   *
   * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
   */
  public java.util.List<org.tensorflow.framework.TensorSliceProto.Extent> getExtentList() {
    return extent_;
  }
  /**
   * <pre>
   * Extent of the slice in all tensor dimensions.
   * Must have one entry for each of the dimension of the tensor that this
   * slice belongs to.  The order of sizes is the same as the order of
   * dimensions in the TensorShape.
   * </pre>
   *
   * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder> 
      getExtentOrBuilderList() {
    return extent_;
  }
  /**
   * <pre>
   * Extent of the slice in all tensor dimensions.
   * Must have one entry for each of the dimension of the tensor that this
   * slice belongs to.  The order of sizes is the same as the order of
   * dimensions in the TensorShape.
   * </pre>
   *
   * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
   */
  public int getExtentCount() {
    return extent_.size();
  }
  /**
   * <pre>
   * Extent of the slice in all tensor dimensions.
   * Must have one entry for each of the dimension of the tensor that this
   * slice belongs to.  The order of sizes is the same as the order of
   * dimensions in the TensorShape.
   * </pre>
   *
   * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
   */
  public org.tensorflow.framework.TensorSliceProto.Extent getExtent(int index) {
    return extent_.get(index);
  }
  /**
   * <pre>
   * Extent of the slice in all tensor dimensions.
   * Must have one entry for each of the dimension of the tensor that this
   * slice belongs to.  The order of sizes is the same as the order of
   * dimensions in the TensorShape.
   * </pre>
   *
   * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
   */
  public org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder getExtentOrBuilder(
      int index) {
    return extent_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < extent_.size(); i++) {
      output.writeMessage(1, extent_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < extent_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, extent_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.framework.TensorSliceProto)) {
      return super.equals(obj);
    }
    org.tensorflow.framework.TensorSliceProto other = (org.tensorflow.framework.TensorSliceProto) obj;

    boolean result = true;
    result = result && getExtentList()
        .equals(other.getExtentList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getExtentCount() > 0) {
      hash = (37 * hash) + EXTENT_FIELD_NUMBER;
      hash = (53 * hash) + getExtentList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.TensorSliceProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.TensorSliceProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.TensorSliceProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.framework.TensorSliceProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Can only be interpreted if you know the corresponding TensorShape.
   * </pre>
   *
   * Protobuf type {@code tensorflow.TensorSliceProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.TensorSliceProto)
      org.tensorflow.framework.TensorSliceProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.TensorSliceProto.class, org.tensorflow.framework.TensorSliceProto.Builder.class);
    }

    // Construct using org.tensorflow.framework.TensorSliceProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getExtentFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (extentBuilder_ == null) {
        extent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        extentBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.framework.TensorSliceProtos.internal_static_tensorflow_TensorSliceProto_descriptor;
    }

    public org.tensorflow.framework.TensorSliceProto getDefaultInstanceForType() {
      return org.tensorflow.framework.TensorSliceProto.getDefaultInstance();
    }

    public org.tensorflow.framework.TensorSliceProto build() {
      org.tensorflow.framework.TensorSliceProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.framework.TensorSliceProto buildPartial() {
      org.tensorflow.framework.TensorSliceProto result = new org.tensorflow.framework.TensorSliceProto(this);
      int from_bitField0_ = bitField0_;
      if (extentBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          extent_ = java.util.Collections.unmodifiableList(extent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.extent_ = extent_;
      } else {
        result.extent_ = extentBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.framework.TensorSliceProto) {
        return mergeFrom((org.tensorflow.framework.TensorSliceProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.framework.TensorSliceProto other) {
      if (other == org.tensorflow.framework.TensorSliceProto.getDefaultInstance()) return this;
      if (extentBuilder_ == null) {
        if (!other.extent_.isEmpty()) {
          if (extent_.isEmpty()) {
            extent_ = other.extent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureExtentIsMutable();
            extent_.addAll(other.extent_);
          }
          onChanged();
        }
      } else {
        if (!other.extent_.isEmpty()) {
          if (extentBuilder_.isEmpty()) {
            extentBuilder_.dispose();
            extentBuilder_ = null;
            extent_ = other.extent_;
            bitField0_ = (bitField0_ & ~0x00000001);
            extentBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExtentFieldBuilder() : null;
          } else {
            extentBuilder_.addAllMessages(other.extent_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.framework.TensorSliceProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.framework.TensorSliceProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.tensorflow.framework.TensorSliceProto.Extent> extent_ =
      java.util.Collections.emptyList();
    private void ensureExtentIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        extent_ = new java.util.ArrayList<org.tensorflow.framework.TensorSliceProto.Extent>(extent_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.TensorSliceProto.Extent, org.tensorflow.framework.TensorSliceProto.Extent.Builder, org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder> extentBuilder_;

    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public java.util.List<org.tensorflow.framework.TensorSliceProto.Extent> getExtentList() {
      if (extentBuilder_ == null) {
        return java.util.Collections.unmodifiableList(extent_);
      } else {
        return extentBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public int getExtentCount() {
      if (extentBuilder_ == null) {
        return extent_.size();
      } else {
        return extentBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public org.tensorflow.framework.TensorSliceProto.Extent getExtent(int index) {
      if (extentBuilder_ == null) {
        return extent_.get(index);
      } else {
        return extentBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder setExtent(
        int index, org.tensorflow.framework.TensorSliceProto.Extent value) {
      if (extentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtentIsMutable();
        extent_.set(index, value);
        onChanged();
      } else {
        extentBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder setExtent(
        int index, org.tensorflow.framework.TensorSliceProto.Extent.Builder builderForValue) {
      if (extentBuilder_ == null) {
        ensureExtentIsMutable();
        extent_.set(index, builderForValue.build());
        onChanged();
      } else {
        extentBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder addExtent(org.tensorflow.framework.TensorSliceProto.Extent value) {
      if (extentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtentIsMutable();
        extent_.add(value);
        onChanged();
      } else {
        extentBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder addExtent(
        int index, org.tensorflow.framework.TensorSliceProto.Extent value) {
      if (extentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtentIsMutable();
        extent_.add(index, value);
        onChanged();
      } else {
        extentBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder addExtent(
        org.tensorflow.framework.TensorSliceProto.Extent.Builder builderForValue) {
      if (extentBuilder_ == null) {
        ensureExtentIsMutable();
        extent_.add(builderForValue.build());
        onChanged();
      } else {
        extentBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder addExtent(
        int index, org.tensorflow.framework.TensorSliceProto.Extent.Builder builderForValue) {
      if (extentBuilder_ == null) {
        ensureExtentIsMutable();
        extent_.add(index, builderForValue.build());
        onChanged();
      } else {
        extentBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder addAllExtent(
        java.lang.Iterable<? extends org.tensorflow.framework.TensorSliceProto.Extent> values) {
      if (extentBuilder_ == null) {
        ensureExtentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, extent_);
        onChanged();
      } else {
        extentBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder clearExtent() {
      if (extentBuilder_ == null) {
        extent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        extentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public Builder removeExtent(int index) {
      if (extentBuilder_ == null) {
        ensureExtentIsMutable();
        extent_.remove(index);
        onChanged();
      } else {
        extentBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public org.tensorflow.framework.TensorSliceProto.Extent.Builder getExtentBuilder(
        int index) {
      return getExtentFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder getExtentOrBuilder(
        int index) {
      if (extentBuilder_ == null) {
        return extent_.get(index);  } else {
        return extentBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder> 
         getExtentOrBuilderList() {
      if (extentBuilder_ != null) {
        return extentBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(extent_);
      }
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public org.tensorflow.framework.TensorSliceProto.Extent.Builder addExtentBuilder() {
      return getExtentFieldBuilder().addBuilder(
          org.tensorflow.framework.TensorSliceProto.Extent.getDefaultInstance());
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public org.tensorflow.framework.TensorSliceProto.Extent.Builder addExtentBuilder(
        int index) {
      return getExtentFieldBuilder().addBuilder(
          index, org.tensorflow.framework.TensorSliceProto.Extent.getDefaultInstance());
    }
    /**
     * <pre>
     * Extent of the slice in all tensor dimensions.
     * Must have one entry for each of the dimension of the tensor that this
     * slice belongs to.  The order of sizes is the same as the order of
     * dimensions in the TensorShape.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorSliceProto.Extent extent = 1;</code>
     */
    public java.util.List<org.tensorflow.framework.TensorSliceProto.Extent.Builder> 
         getExtentBuilderList() {
      return getExtentFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.TensorSliceProto.Extent, org.tensorflow.framework.TensorSliceProto.Extent.Builder, org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder> 
        getExtentFieldBuilder() {
      if (extentBuilder_ == null) {
        extentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.TensorSliceProto.Extent, org.tensorflow.framework.TensorSliceProto.Extent.Builder, org.tensorflow.framework.TensorSliceProto.ExtentOrBuilder>(
                extent_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        extent_ = null;
      }
      return extentBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.TensorSliceProto)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.TensorSliceProto)
  private static final org.tensorflow.framework.TensorSliceProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.framework.TensorSliceProto();
  }

  public static org.tensorflow.framework.TensorSliceProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TensorSliceProto>
      PARSER = new com.google.protobuf.AbstractParser<TensorSliceProto>() {
    public TensorSliceProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new TensorSliceProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TensorSliceProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TensorSliceProto> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.framework.TensorSliceProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

