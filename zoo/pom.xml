<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>zoo-parent</artifactId>
        <groupId>com.intel.analytics.zoo</groupId>
        <version>0.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>analytics-zoo</artifactId>
    <packaging>jar</packaging>

    <properties>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
        <java.version>1.7</java.version>
        <javac.version>1.7</javac.version>
        <spark-scope>provided</spark-scope>
        <bigdl-scope>provided</bigdl-scope>
        <scala.major.version>2.11</scala.major.version>
        <scala.version>2.11.8</scala.version>
        <scala.macros.version>2.1.0</scala.macros.version>
        <scalatest.version>2.2.4</scalatest.version>
        <spark.version>2.1.0</spark.version>
        <bigdl.version>0.5.0</bigdl.version>
        <backend.version>0.0.0</backend.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>build_backend</id>
            <properties>
                <bigdl-scope>provided</bigdl-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.intel.analytics.bigdl</groupId>
                    <artifactId>zoo_bigdl</artifactId>
                    <version>${backend.version}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>

        </profile>
        <profile>
            <id>spark_1.6</id>
            <properties>
                <spark-version.project>1.6-plus</spark-version.project>
                <spark.version>1.6.3</spark.version>
                <scala.major.version>2.10</scala.major.version>
                <scala.version>2.10.5</scala.version>
                <scala.macros.version>2.0.1</scala.macros.version>
                <scalatest.version>2.2.4</scalatest.version>
                <bigdl.artifactId>bigdl-SPARK_1.6</bigdl.artifactId>
                <bigdl-scope>compile</bigdl-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.intel.analytics.bigdl</groupId>
                    <artifactId>${bigdl.artifactId}</artifactId>
                    <version>${bigdl.version}</version>
                    <scope>${bigdl-scope}</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>spark_2.x</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <java.version>1.8</java.version>
                <javac.version>1.8</javac.version>
                <spark-version.project>2.1</spark-version.project>
                <spark.version>2.1.0</spark.version>
                <scala.major.version>2.11</scala.major.version>
                <scala.version>2.11.8</scala.version>
                <scala.macros.version>2.1.0</scala.macros.version>
                <bigdl.artifactId>bigdl-SPARK_${spark-version.project}</bigdl.artifactId>
                <bigdl-scope>compile</bigdl-scope>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.intel.analytics.bigdl</groupId>
                    <artifactId>${bigdl.artifactId}</artifactId>
                    <version>${bigdl.version}</version>
                    <scope>${bigdl-scope}</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>without_bigdl</id>
            <properties>
                <bigdl-scope>provided</bigdl-scope>
            </properties>
        </profile>

        <profile>
            <id>scala_2.11</id>
            <properties>
                <scala.major.version>2.11</scala.major.version>
                <scala.version>2.11.8</scala.version>
                <scala.macros.version>2.1.0</scala.macros.version>
            </properties>
        </profile>
        <!-- put this profile after spark_2.x profile -->
        <profile>
            <id>scala_2.10</id>
            <properties>
                <scala.major.version>2.10</scala.major.version>
                <scala.version>2.10.5</scala.version>
                <scala.macros.version>2.0.1</scala.macros.version>
            </properties>
        </profile>

        <profile>
            <id>all-in-one</id>
            <properties>
                <spark-scope>compile</spark-scope>
            </properties>
        </profile>

        <profile>
            <id>sign</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>apache-repo</id>
            <name>Apache Repository</name>
            <url>https://repository.apache.org/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-repo</id>
            <name>JBoss Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype</id>
            <name>sonatype repository</name>
            <url>https://oss.sonatype.org/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <dependencies>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId> <version>0.9.9-RC1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-actors</artifactId>
            <version>${scala.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scalap</artifactId>
            <version>${scala.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.major.version}</artifactId>
            <version>${spark.version}</version>
            <scope>${spark-scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.spark-project.spark</groupId>
            <artifactId>unused</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.tensorflow</groupId>
            <artifactId>tensorflow</artifactId>
            <version>1.8.0</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <!-- Include the properties file to provide the build information. -->
                <directory>${project.build.directory}/extra-resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.0.4</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <!-- Execute the shell script to generate the zoo build information. -->
                            <arguments>
                                <argument>${project.basedir}/../scripts/zoo-build-info</argument>
                                <argument>${project.build.directory}/extra-resources</argument>
                                <argument>${project.version}</argument>
                                <argument>${spark.version}</argument>
                                <argument>${scala.version}</argument>
                                <argument>${java.version}</argument>
                            </arguments>

                            <executable>bash</executable>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>bigdl-test-report.txt</filereports>
                    <systemProperties>
                        <bigdl.disableCheckSysEnv>true</bigdl.disableCheckSysEnv>
                    </systemProperties>
                    <argLine>-Xmx6g -XX:MaxPermSize=1g</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                </configuration>
                <executions>
                    <execution>
                        <id>shade</id>
                        <phase>package</phase>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>org.spark-project.spark:unused</include>
                                </includes>
                            </artifactSet>
                        </configuration>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>without-spark</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>with-spark</id>
                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/all-in-one.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>python</id>
                        <inherited>false</inherited>
                        <configuration>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/python-zip.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>make-dist</id>
                        <inherited>false</inherited>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>analytics-zoo-${project.version}-spark-${spark.version}</finalName>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>

                    <execution>
                        <id>make-dist-all</id>
                        <inherited>false</inherited>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>analytics-zoo-${project.version}-spark-${spark.version}</finalName>
                            <descriptors>
                                <descriptor>${project.basedir}/src/assembly/dist-all.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>0.8.0</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${project.basedir}/scalastyle_config.xml</configLocation>
                    <outputFile>${project.build.directory}/stylecheck/scalastyle-output.xml</outputFile>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>eclipse-add-source</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                        <configuration>
                            <args>
                                <!-- Do not change the arg orders. It is a weird way to pass in
                                this arg. Maybe it is a bug of the plugin. -->
                                <arg>-skip-packages</arg>
                                <arg>caffe:org.tensorflow:netty:org.apache.spark.sparkExtension:org.apache.spark.rdd:org.apache.spark.storage:org.apache.spark.bigdl</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>false</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <!-- Too many deprecation usage, let's suspend it temporary-->
                        <!-- arg>-deprecation</arg-->
                        <arg>-feature</arg>
                        <!-- Not enable the fatal warnings for spark 1.6-->
                        <!-- arg>-Xfatal-warnings</arg -->
                    </args>
                    <!-- The following plugin is required to use quasiquotes in Scala 2.10 and is used
                         by Spark SQL for code generation. -->
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>org.scalamacros</groupId>
                            <artifactId>paradise_${scala.version}</artifactId>
                            <version>${scala.macros.version}</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>false</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
