#!/usr/bin/env bash

#
# Copyright 2018 Analytics Zoo Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

. `dirname $0`/prepare_env.sh

cd "`dirname $0`"

export PYSPARK_PYTHON=python
export PYSPARK_DRIVER_PYTHON=python

py_version="$(python -V 2>&1)"
spark_version="$(pyspark --version 2>&1)"

exit_status_0=$?
if [ $exit_status_0 -eq 127 ];
then
    temp=$SPARK_HOME/bin/pyspark
    spark_version="$($temp --version 2>&1)"
fi
temp="${spark_version% /_/*}"
spark_version="${temp##*\\}"

echo "pyspark version is "$spark_version
echo "spark home is "$SPARK_HOME

#check version whether it's support ray
if [[ $py_version == *"Python 3.5"* || $py_version == *"Python 3.6"* ]]; then
    if [[ $spark_version == *"version 2.4.3"* || $spark_version == *"version 2.4.0"* ]]; then
        python -m pytest -v --doctest-modules ../zoo \
            --ignore=../zoo/pipeline/api/keras2 \
            --ignore=../zoo/tfpark/text \
            --ignore=../zoo/examples
    else
        echo "current spark version is not support ray."
        echo "Skipping ray. Please check your spark version or check SPARK_HOME."
        python -m pytest -v --doctest-modules ../zoo \
            --ignore=../zoo/pipeline/api/keras2 \
            --ignore=../zoo/tfpark/text \
            --ignore=../zoo/examples \
            --ignore=../zoo/ray/
    fi
else
    echo "current python version is not support ray."
    echo "Skipping ray. Please check your pyhton version."
    python -m pytest -v --doctest-modules ../zoo \
        --ignore=../zoo/pipeline/api/keras2 \
        --ignore=../zoo/tfpark/text \
        --ignore=../zoo/examples \
        --ignore=../zoo/ray/
fi

exit_status_1=$?
if [ $exit_status_1 -ne 0 ];
then
    exit $exit_status_1
fi

if [[ $py_version == *"Python 2.7"* ]]; then
    echo "Running Python 2.7"
    echo "Skipping OpenVINO tests"
    echo "Skipping nlp-architect tests"
    python -m pytest -v ../test --ignore=../test/zoo/pipeline/utils/test_utils.py \
       --ignore=../test/zoo/pipeline/api/keras2/ \
       --ignore=../test/zoo/pipeline/autograd/ \
       --ignore=../test/zoo/pipeline/inference/ \
       --ignore=../test/zoo/tfpark/test_text_models.py \
       --ignore=../test/zoo/ray/
    exit_status_2=$?
    if [ $exit_status_2 -ne 0 ];
    then
        exit $exit_status_2
    fi
else
    echo "Running Python 3"
    python -m pytest -v ../test --ignore=../test/zoo/pipeline/utils/test_utils.py \
       --ignore=../test/zoo/pipeline/api/keras2/ \
       --ignore=../test/zoo/pipeline/autograd/ \
       --ignore=../test/zoo/ray/integration/ \
       --ignore=../test/zoo/ray/
    exit_status_3=$?
    if [ $exit_status_3 -ne 0 ];
    then
        exit $exit_status_3
    fi
fi
