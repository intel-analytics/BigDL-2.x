# https://www.playframework.com/documentation/latest/Configuration

# enable CORS
play.filters.enabled += "play.filters.cors.CORSFilter"

# config CORS
play.filters.cors {
  exposedHeaders = ["Access-Control-Allow-Origin"]
}

# set application secret
play.http.secret.key="4dRiTTWo/x1M_ddvESux^pD2J9lHPh7TVhzCD;Qq1r1hyvuBw`aeFfSFZk=PkzKL"

//# default play thread pool conf
//akka {
//  actor {
//    default-dispatcher {
//      fork-join-executor {
//        # Settings this to 1 instead of 3 seems to improve performance.
//        parallelism-factor = 1.0
//
//        # @richdougherty: Not sure why this is set below the Akka
//        # default.
//        parallelism-max = 24
//
//        # Setting this to LIFO changes the fork-join-executor
//        # to use a stack discipline for task scheduling. This usually
//        # improves throughput at the cost of possibly increasing
//        # latency and risking task starvation (which should be rare).
//        task-peeking-mode = LIFO
//      }
//    }
//  }
//}

# ignore pids
pidfile.path = "/dev/null"

# play bind loaclhost
//play start -Dhttp.address=localhost
//http {
//  address = 0.0.0.0
//  port = 80
//}

akka.stream.alpakka.s3 {
  # whether the buffer request chunks (up to 5MB each) to "memory" or "disk"
  buffer = "memory"

  # location for temporary files, if buffer is set to "disk". If empty, uses the standard java temp path.
  disk-buffer-path = ""

  proxy {
    # hostname of the proxy. If undefined ("") proxy is not enabled.
    host = ""
    port = 8000

    # if "secure" is set to "true" then HTTPS will be used for all requests to S3, otherwise HTTP will be used
    secure = true
  }

  # default values for AWS configuration. If credentials and/or region are not specified when creating S3Client,
  # these values will be used.
  aws {
    # DEPRECATION WARNING
    # Support for settins directly on this level is left for compatibility.
    # It may be removed in future releases.
    # An attempt will be made to read these if no `aws.credentials.*` params
    # will be provided. If you used these parameters, switch to the new format.
    # access-key-id
    # secret-access-key
    # Equivalent config would be:
    # akka.stream.alpakka.s3.aws.credentials {
    #   provider = static
    #   access-key-id = ${old-access-key-id}
    #   secret-access-key = ${old-secret-access-key}
    # }
    # If this section is absent, the fallback behavior is to use the
    # com.amazonaws.auth.DefaultAWSCredentialsProviderChain instance to resolve credentials
    credentials {
      # supported providers:
      # anon - anonymous requests ("no auth")
      # static - static credentials,
      #   required params:
      #     access-key-id
      #     secret-access-key
      #   optional:
      #     token
      # default: as described in com.amazonaws.auth.DefaultAWSCredentialsProviderChain docs,
      # attempts to get the credentials from either:
      #   - environment variables
      #   - system properties
      #   - credentials file
      #   - EC2 credentials service
      #   - IAM / metadata
      provider = default
    }

    # If this section is absent, the fallback behavior is to use the
    # com.amazonaws.regions.AwsRegionProvider.DefaultAwsRegionProviderChain instance to resolve region
    region {
      # supported providers:
      # static - static credentials,
      #   required params:
      #     default-region
      # default: as described in com.amazonaws.regions.AwsRegionProvider.DefaultAwsRegionProviderChain docs,
      # attempts to get the region from either:
      #   - environment variables
      #   - system properties
      #   - progile file
      #   - EC2 metadata
      provider = default
    }
  }

  # Enable path style access to s3, i.e. "https://s3-eu-west-1.amazonaws.com/my.bucket/myobject"
  # Default is virtual-hosted style.
  # When using virtual hostedâ€“style buckets with SSL, the S3 wild card certificate only matches buckets that do not contain periods.
  # Buckets containing periods will lead to certificate errors. In those cases it's useful to enable path-style access.
  path-style-access = false

  # Custom endpoint url, used for alternate s3 implementations
  # endpoint-url = null

  # Which version of the list bucket api to use. Set to 1 to use the old style version 1 API.
  # By default the newer version 2 api is used.
  list-bucket-api-version = 2
}

# play filter config
play.filters.enabled += play.filters.hosts.AllowedHostsFilter
play.filters.hosts {
  allowed = ["."]
}
