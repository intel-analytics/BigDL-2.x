name: Chronos Notebook Python Spark3.1 py38 py39

# Cancel previous runs in the PR when you push new commits
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

# Controls when the action will run. 
on:
  # schedule:
  #   - cron: '0 15 * * *' # GMT time, 15:00 GMT == 23:00 China
  # Trigger the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/chronos-notebook-python-spark31.yml'
      - 'python/chronos/dev/app/run-app-tests-pip.sh'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Chronos-example:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos use-case notebook
        shell: bash
        run: |
          conda remove -n chronos-prvn-env -y --all
          conda create -n chronos-prvn-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-prvn-env
          apt-get update
          apt-get install -y libgl1
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple jupyter
          pip install pytest
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos-spark3[all]
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          bash python/chronos/dev/app/run-app-tests-pip.sh
          source deactivate
          conda remove -n chronos-prvn-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-prvn-env -y --all
